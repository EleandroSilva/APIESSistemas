{*******************************************************}
{                    API PDV - JSON                     }
{                      ES Sistemas                      }
{            Início do projeto 27/05/2023               }
{                 www.bemoreweb.com.br                  }
{                     (17)98169-5336                    }
{                        2003/2023                      }
{         Analista desenvolvedor (Eleandro Silva)       }
{*******************************************************}
unit Controller.Empresa;

interface



uses
  System.SysUtils,

  System.JSON,

  Data.DB,
  FireDAC.Comp.Client,

  DataSet.Serialize,
  Horse,
  Horse.BasicAuthentication,

  Controller.Interfaces,
  Model.Imp.Controller;

type
  TVar = class
    private
      FTexto           : String;
      FId              : Integer;
      FCNPJ            : String;
      FIE              : String;
      FNomeEmpresarial : String;
      FNomeFantasia    : String;
      FDD              : String;
      FCelular         : String;
      FJSONArray       : TJSONArray;
      FBody            : TJSONValue;
      FDataSource      : TDataSource;
    public
      constructor Create;
      destructor Destroy; override;
  end;

type
  TControllerEmpresa = class
  private
    class procedure GetAll(Req: THorseRequest; Res: THorseResponse; Next : TProc);
    class procedure GetbyId(Req: THorseRequest; Res: THorseResponse; Next : TProc);
    class procedure Post(Req: THorseRequest; Res: THorseResponse; Next : TProc);
    class procedure Put(Req: THorseRequest; Res: THorseResponse; Next : TProc);
    class procedure Delete(Req: THorseRequest; Res: THorseResponse; Next : TProc);
  public
    class procedure Registry;
  end;

implementation

{ TVar }

constructor TVar.Create;
begin
  FDataSource := TDataSource.Create(nil);
end;

destructor TVar.Destroy;
begin
  FreeAndNil(FDataSource);
  inherited;
end;

class procedure TControllerEmpresa.GetAll(Req: THorseRequest; Res: THorseResponse; Next : TProc);
var
  LController : iController;
  LVar        : TVar;
begin
   LVar             := TVar.Create;
   LVar.FDataSource := TDataSource.Create(nil);
   LVar.FCNPJ            := Req.Query.Field('cnpj').AsString;
   LVar.FNomeEmpresarial := Req.Query.Field('nomeempresarial').AsString;
   LVar.FNomeFantasia    := Req.Query.Field('nomefantasia').AsString;

   LController := TController.New;
   Try
     if ((LVar.FCNPJ ='') and (LVar.FNomeEmpresarial ='') and (LVar.FNomeFantasia ='')) then
       LController
             .Entidade
               .Empresa
                 .GetAll
             .DataSet(LVar.FDataSource)
       else
       LController
             .Entidade
               .Empresa
               .This
                 .CNPJ(LVar.FCNPJ)
                 .NomeEmpresarial(LVar.FNomeEmpresarial)
                 .NomeFantasia(LVar.FNomeFantasia)
                 .&End
               .GetbyParams
             .DataSet(LVar.FDataSource);

     LVar.FJSONArray := LVar.FDataSource.DataSet.ToJSONArray();
     LVar.FTexto := LVar.fJsonArray.ToString;
     Res.Send<TJSONArray>(LVar.FJSONArray);
   Finally
     FreeAndNil(LVar);
   End;
end;

class procedure TControllerEmpresa.GetbyId(Req: THorseRequest; Res: THorseResponse; Next : TProc);
var
  LController : iController;
  LVar        : TVar;
begin
   LController      := TController.New;
   LVar             := TVar.Create;
   Try
     LVar.FId := Req.Params['id'].ToInt64;
     LController
           .Entidade
             .Empresa
             .GetbyId(LVar.FId)
             .DataSet(LVar.FDataSource);

     LVar.FJSONArray := LVar.FDataSource.DataSet.ToJSONArray();
     Res.Send<TJSONArray>(LVar.FJSONArray);
   Finally
     FreeAndNil(LVar);
   End;
end;

class procedure TControllerEmpresa.Post(Req: THorseRequest; Res: THorseResponse; Next : TProc);
var
  LController : iController;
  LVar        : TVar;
begin
  LVar := TVar.Create;
  LVar.FCNPJ            := Req.Query.Field('cnpj').AsString;
  LVar.FIe              := Req.Query.Field('ie').AsString;
  LVar.FNomeEmpresarial := Req.Query.Field('nomeempresarial').AsString;
  LVar.FNomeFantasia    := Req.Query.Field('nomefantasia').AsString;
  LVar.FDD              := Req.Query.Field('dd').AsString;
  LVar.FCelular         := Req.Query.Field('celular').AsString;

  try
    LVar.FBody := Req.Body<TJSONObject>;

    LController
             .Entidade
               .Empresa
               .This
                 .CNPJ(LVar.FCNPJ)
                 .IE(LVar.FIE)
                 .NomeEmpresarial(LVar.FNomeEmpresarial)
                 .NomeFantasia(LVar.FNomeFantasia)
                 .DD(LVar.FDD)
                 .Celular(LVar.FCelular)
                 .&End
               .Post
             .DataSet();
  finally
    FreeAndNil(LVar);
  end;
end;

class procedure TControllerEmpresa.Put(Req: THorseRequest; Res: THorseResponse; Next : TProc);
var
  LController : iController;
  LVar        : TVar;
begin
  LController := TController.New;
  try
    LVar.FId   := Req.Params['id'].ToInt64;
    LVar.FBody := Req.Body<TJSONObject>;
    LVar := TVar.Create;
    LVar.FCNPJ            := Req.Query.Field('cnpj').AsString;
    LVar.FIe              := Req.Query.Field('ie').AsString;
    LVar.FNomeEmpresarial := Req.Query.Field('nomeempresarial').AsString;
    LVar.FNomeFantasia    := Req.Query.Field('nomefantasia').AsString;
    LVar.FDD              := Req.Query.Field('dd').AsString;
    LVar.FCelular         := Req.Query.Field('celular').AsString;

    LController
             .Entidade
               .Empresa
               .This
                 .Id(LVar.FId)
                 .CNPJ(LVar.FCNPJ)
                 .IE(LVar.FIE)
                 .NomeEmpresarial(LVar.FNomeEmpresarial)
                 .NomeFantasia(LVar.FNomeFantasia)
                 .DD(LVar.FDD)
                 .Celular(LVar.FCelular)
                 .&End
               .Put
             .DataSet();
  finally
    FreeAndNil(LVar);
  end;
end;

class procedure TControllerEmpresa.Delete(Req: THorseRequest; Res: THorseResponse; Next : TProc);
var
  LController : iController;
  LId         : Integer;
begin
   LController := TController.New;
   Try
     LId := Req.Params['id'].ToInt64;
     LController
               .Entidade
                 .Empresa
                   .This
                   .Id(LId)
                   .&End
                 .Delete
               .DataSet();
   Finally
     //Criar MSG
   End;
end;

class procedure TControllerEmpresa.Registry;
begin
  THorse
      .Group
      .Prefix('ess')
         .Get('/empresas'     ,TControllerEmpresa.GetAll)
         .Get('/empresas/:id' ,TControllerEmpresa.GetbyId)
        .Post('empresas'      ,TControllerEmpresa.Post)
         .Put('empresas/:id'  ,TControllerEmpresa.Put)
      .Delete('empresas/:id'  ,TControllerEmpresa.Delete);
end;

end.
